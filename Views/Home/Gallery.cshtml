@model List<Journal.Domain.DayEntry>

@{
    ViewData["Title"] = "Gallery";
}


<style>
    .image-thumb {
        min-width: 100px;
        min-height: 100px;
        background-color: #333;
        margin: 0px;
        cursor: pointer;
    }

    .tile.is-wrapped {
        flex-wrap: wrap;
    }

    .image-group {
        display: inline-block;
    }

    .modal-content {
        width: inherit;
        min-width: 640px;
        text-align:center;
    }

        .modal-content img {
            max-height: calc(100% - 40px);
        }
</style>

<section class="section" style="padding-top:1em">
    <div class="container is-fluid has-text-centered">
        <div class="columns is-centered">
            <div class="column">
                <div class="tile is-ancestor is-wrapped">
                    @{
                        var entriesPerMonth = Model
                            .GroupBy(e =>
                            {
                                var date = DateTime.ParseExact(e.Day, "yyyy-MM-dd", System.Globalization.CultureInfo.InvariantCulture);
                                return (date.Year, System.Globalization.ISOWeek.GetWeekOfYear(date));
                            })
                            .ToDictionary(g => g.Key, g => g.ToArray());
                    }
                    @foreach (var entriesOfWeek in entriesPerMonth)
                    {
                        var totalImageCount = entriesOfWeek.Value.Sum(e => e.ImageCount);
                        string isClass = "";
                        int nr = (int)Math.Ceiling(totalImageCount / 2f);
                        if (nr > 12) nr = 12;
                        if (nr > 1)
                            isClass = "is-" + nr;

                        <div class="tile is-parent @isClass">
                            <div class="tile is-child box">
                                <p class="heading">
                                    @System.Globalization.ISOWeek.ToDateTime(entriesOfWeek.Key.Year, entriesOfWeek.Key.Item2, System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek).ToString("dd MMM yyyy")
                                    &nbsp;-&nbsp;
                                    @System.Globalization.ISOWeek.ToDateTime(entriesOfWeek.Key.Year, entriesOfWeek.Key.Item2, System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek).AddDays(6).ToString("dd MMM yyyy")
                                </p>
                                @foreach (var entry in entriesOfWeek.Value)
                                {
                                    <div class="image-group" data-day="@entry.Day">
                                        @for (int i = entry.ImageCount - 1; i >= 0 ; i--)
                                        {
                                            <img class="image-thumb">
                                            </img>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<div id="modal" class="modal">
    <div class="modal-background"></div>
    <div class="modal-content">
        <!-- Any other Bulma elements you want -->
    </div>
    <button class="modal-close is-large" aria-label="close"></button>
</div>



@section Scripts {


    <script src="~/js/gallery.js"></script>
}